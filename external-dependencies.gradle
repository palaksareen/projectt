def springVersion = '4.3.5.RELEASE'
def slf4jVersion = '1.7.22'
def logbackVersion = '1.1.9'
def junitVersion = "4.12"
def powerMockVersion = "1.6.6"
def logbackJaninoVersion = "3.0.6"
def springBootVersion = '1.4.5.RELEASE'
def dropwizardMetricsVersion = '3.1.2'
def yammerMetricsVersion = '2.1.3'

ext {

    junit = "junit:junit:$junitVersion"
    mockito = "org.mockito:mockito-core:1.10.19"
    easymock = "org.easymock:easymock:3.4"

    cache = 'net.sf.ehcache:ehcache:2.8.0'
    jaxws = "com.sun.xml.ws:jaxws-rt:2.2.10"
    jaxbxjc = "com.sun.xml.bind:jaxb-xjc:2.1.7"
    esapi = "org.owasp.esapi:esapi:2.1.0.1"

    powerMock = [
            junit4  : "org.powermock:powermock-module-junit4:$powerMockVersion",
            mockito : "org.powermock:powermock-api-mockito:$powerMockVersion",
            easymock: "org.powermock:powermock-api-easymock:$powerMockVersion"
    ]

    dropwizard = [
            core      : "io.dropwizard.metrics:metrics-core:$dropwizardMetricsVersion",
            annotation: "io.dropwizard.metrics:metrics-annotation:$dropwizardMetricsVersion",
            jersey    : "io.dropwizard.metrics:metrics-jersey:$dropwizardMetricsVersion",
            jvm       : "io.dropwizard.metrics:metrics-jvm:$dropwizardMetricsVersion",
            graphite  : "io.dropwizard.metrics:metrics-graphite:$dropwizardMetricsVersion"
    ]

    ryantenney = [
            spring: 'com.ryantenney.metrics:metrics-spring:3.1.3'
    ]

    yammer = [
            core      : "com.yammer.metrics:metrics-core:$yammerMetricsVersion",
            annotation: "com.yammer.metrics:metrics-annotation:$yammerMetricsVersion",
            jersey    : "com.yammer.metrics:metrics-jersey:$yammerMetricsVersion",
            spring    : "com.yammer.metrics:metrics-spring:$yammerMetricsVersion",
            aop       : 'com.yammer.metrics:metrics-aop:2.0.0-BETA18'
    ]

    codahale = [
            json: "com.codahale.metrics:metrics-json:3.0.1"
    ]

    spring = [
            contextSupport: "org.springframework:spring-context-support:$springVersion"
    ]

    springBoot = [
            web     : "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
            aop     : "org.springframework.boot:spring-boot-starter-aop:$springBootVersion",
            test    : "org.springframework.boot:spring-boot-starter-test:$springBootVersion",
            velocity: "org.springframework.boot:spring-boot-starter-velocity:$springBootVersion"
    ]

    slf4jLogger = [
            core   : "ch.qos.logback:logback-core:$logbackVersion",
            classic: "ch.qos.logback:logback-classic:$logbackVersion"
    ]

    logback = [
            janino: "org.codehaus.janino:janino:$logbackJaninoVersion"
    ]

    slf4jApi = "org.slf4j:slf4j-api:$slf4jVersion"

    javassist = [
            assist: "org.javassist:javassist:3.21.0-GA"
    ]

    servlet = 'javax.servlet:javax.servlet-api:3.1.0'

    apacheCodec = 'commons-codec:commons-codec:1.10'

    commons = [
            io           : 'commons-io:commons-io:2.5',
            configuration: 'commons-configuration:commons-configuration:1.6'
    ]

    jersey = [
            client: 'com.sun.jersey:jersey-client:1.19'
    ]

    aspect = "org.aspectj:aspectjweaver:1.8.8"
}


